//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageOfPersonDocuments", Namespace="http://schemas.datacontract.org/2004/07/FootlooseFS.EnterpriseService")]
    [System.SerializableAttribute()]
    public partial class PageOfPersonDocuments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FootlooseFS.Models.PersonDocument> DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalItemCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FootlooseFS.Models.PersonDocument> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItemCount {
            get {
                return this.TotalItemCountField;
            }
            set {
                if ((this.TotalItemCountField.Equals(value) != true)) {
                    this.TotalItemCountField = value;
                    this.RaisePropertyChanged("TotalItemCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FootlooseFSEnterpriseService.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/SearchPersons", ReplyAction="http://tempuri.org/IPersonService/SearchPersonsResponse")]
        FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.PageOfPersonDocuments SearchPersons(int pageNumber, int numRecordsInPage, string sort, FootlooseFS.Models.SortDirection sortDirection, FootlooseFS.Models.PersonDocument searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/SearchPersons", ReplyAction="http://tempuri.org/IPersonService/SearchPersonsResponse")]
        System.Threading.Tasks.Task<FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.PageOfPersonDocuments> SearchPersonsAsync(int pageNumber, int numRecordsInPage, string sort, FootlooseFS.Models.SortDirection sortDirection, FootlooseFS.Models.PersonDocument searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersonById", ReplyAction="http://tempuri.org/IPersonService/GetPersonByIdResponse")]
        FootlooseFS.Models.Person GetPersonById(int personID, FootlooseFS.Models.PersonIncludes personIncludes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersonById", ReplyAction="http://tempuri.org/IPersonService/GetPersonByIdResponse")]
        System.Threading.Tasks.Task<FootlooseFS.Models.Person> GetPersonByIdAsync(int personID, FootlooseFS.Models.PersonIncludes personIncludes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/InsertPerson", ReplyAction="http://tempuri.org/IPersonService/InsertPersonResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.PageOfPersonDocuments))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.SortDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonDocument>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonIncludes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonAccount>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Account))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AccountType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.AccountTransaction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AccountTransaction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.TransactionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.RelationshipType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonAddressAssn>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonAddressAssn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AddressType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonLogin))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Phone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PhoneType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.Phone>))]
        FootlooseFS.Service.OperationStatus InsertPerson(FootlooseFS.Models.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/InsertPerson", ReplyAction="http://tempuri.org/IPersonService/InsertPersonResponse")]
        System.Threading.Tasks.Task<FootlooseFS.Service.OperationStatus> InsertPersonAsync(FootlooseFS.Models.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/UpdatePerson", ReplyAction="http://tempuri.org/IPersonService/UpdatePersonResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.PageOfPersonDocuments))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.SortDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonDocument>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonIncludes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonAccount>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Account))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AccountType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.AccountTransaction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AccountTransaction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.TransactionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.RelationshipType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonAddressAssn>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonAddressAssn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AddressType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonLogin))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Phone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PhoneType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.Phone>))]
        FootlooseFS.Service.OperationStatus UpdatePerson(FootlooseFS.Models.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/UpdatePerson", ReplyAction="http://tempuri.org/IPersonService/UpdatePersonResponse")]
        System.Threading.Tasks.Task<FootlooseFS.Service.OperationStatus> UpdatePersonAsync(FootlooseFS.Models.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/DeletePerson", ReplyAction="http://tempuri.org/IPersonService/DeletePersonResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.PageOfPersonDocuments))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.SortDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonDocument>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonIncludes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonAccount>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Account))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AccountType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.AccountTransaction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AccountTransaction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.TransactionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.RelationshipType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.PersonAddressAssn>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonAddressAssn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.AddressType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PersonLogin))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.Phone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FootlooseFS.Models.PhoneType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<FootlooseFS.Models.Phone>))]
        FootlooseFS.Service.OperationStatus DeletePerson(FootlooseFS.Models.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/DeletePerson", ReplyAction="http://tempuri.org/IPersonService/DeletePersonResponse")]
        System.Threading.Tasks.Task<FootlooseFS.Service.OperationStatus> DeletePersonAsync(FootlooseFS.Models.Person person);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.IPersonService>, FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.IPersonService {
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.PageOfPersonDocuments SearchPersons(int pageNumber, int numRecordsInPage, string sort, FootlooseFS.Models.SortDirection sortDirection, FootlooseFS.Models.PersonDocument searchCriteria) {
            return base.Channel.SearchPersons(pageNumber, numRecordsInPage, sort, sortDirection, searchCriteria);
        }
        
        public System.Threading.Tasks.Task<FootlooseFS.Web.AdminUI.FootlooseFSEnterpriseService.PageOfPersonDocuments> SearchPersonsAsync(int pageNumber, int numRecordsInPage, string sort, FootlooseFS.Models.SortDirection sortDirection, FootlooseFS.Models.PersonDocument searchCriteria) {
            return base.Channel.SearchPersonsAsync(pageNumber, numRecordsInPage, sort, sortDirection, searchCriteria);
        }
        
        public FootlooseFS.Models.Person GetPersonById(int personID, FootlooseFS.Models.PersonIncludes personIncludes) {
            return base.Channel.GetPersonById(personID, personIncludes);
        }
        
        public System.Threading.Tasks.Task<FootlooseFS.Models.Person> GetPersonByIdAsync(int personID, FootlooseFS.Models.PersonIncludes personIncludes) {
            return base.Channel.GetPersonByIdAsync(personID, personIncludes);
        }
        
        public FootlooseFS.Service.OperationStatus InsertPerson(FootlooseFS.Models.Person person) {
            return base.Channel.InsertPerson(person);
        }
        
        public System.Threading.Tasks.Task<FootlooseFS.Service.OperationStatus> InsertPersonAsync(FootlooseFS.Models.Person person) {
            return base.Channel.InsertPersonAsync(person);
        }
        
        public FootlooseFS.Service.OperationStatus UpdatePerson(FootlooseFS.Models.Person person) {
            return base.Channel.UpdatePerson(person);
        }
        
        public System.Threading.Tasks.Task<FootlooseFS.Service.OperationStatus> UpdatePersonAsync(FootlooseFS.Models.Person person) {
            return base.Channel.UpdatePersonAsync(person);
        }
        
        public FootlooseFS.Service.OperationStatus DeletePerson(FootlooseFS.Models.Person person) {
            return base.Channel.DeletePerson(person);
        }
        
        public System.Threading.Tasks.Task<FootlooseFS.Service.OperationStatus> DeletePersonAsync(FootlooseFS.Models.Person person) {
            return base.Channel.DeletePersonAsync(person);
        }
    }
}
